## PRODUCE OUTPUT WITH THE MM2S PREDICTIONS PER SAMPLE
colnames(RESULTS) <- listOfCols
message("\n")
message("OUTPUT OF MM2S:","\n")
print.table(RESULTS)
if(csv_output==TRUE)
{
write.csv(RESULTS,file="MM2S_Predictions.csv",sep="\t",col.names=listOfCols,row.names=FALSE)
}
FINAL<-TestKKNN$prob*100
colnames(FINAL)<-c("Group3","Group4","Normal","SHH","WNT")
rownames(FINAL)<-rownames(Mouse)
View(FINAL)
HumanGSVA <- HumanTrainingGSVAMatrix
HumanGroup <- HumanGSVA$Group
HumanGSVA <- t(HumanGSVA)
# Now the Rank matrix will be reduced based on the commonSet
commonSet<-intersect(genesetHuman,genesetMouse)
message("There are ",length(commonSet)," common genesets between Human MB and the Test Data.")
HumanGSVA<-HumanGSVA[commonSet,, drop=FALSE]
HumanGSVA<-t(HumanGSVA)
HumanGSVA<-as.data.frame(HumanGSVA)
HumanGSVA<-HumanGSVA[,NorthcottFeatures, drop=FALSE]
TAKE1<-HumanGSVA
mode(HumanGSVA)
HumanGSVA<-t(HumanGSVA)
dim(HumanGSVA)
genesetHuman<-rownames(HumanGSVA)
TAKE1<-HumanGSVA
Matrix_RANK_Human<-data.frame(genesetHuman)
for(sample in 1:ncol(HumanGSVA))
{
TempRankHuman<-sort(HumanGSVA[,sample],decreasing=TRUE)
Matrix_RANK_Human[,(colnames(HumanGSVA)[sample])]<-match(Matrix_RANK_Human$geneset,names(TempRankHuman))
}
rownames(Matrix_RANK_Human)<-Matrix_RANK_Human$geneset
Human_GSVA_Matrix<-Matrix_RANK_Human[,-1]
TAKE1mat<-Human_GSVA_Matrix
TAKE1mat[1:5,1:5]
mode(TAKE1)
TAKE1<-HumanGSVA
dim(TAKE1)
mode(TAKE1)
HumanGSVA<-t(HumanGSVA)
MouseGSVA<-t(MouseGSVA)
HumanGSVA<-as.data.frame(HumanGSVA)
HumanGSVA <- HumanTrainingGSVAMatrix
HumanGroup <- HumanGSVA$Group
HumanGSVA <- t(HumanGSVA)
HumanGSVA<-HumanGSVA[commonSet,, drop=FALSE]
mode(HumanGSVA)
HumanGSVA<-t(HumanGSVA)
HumanGSVA<-as.data.frame(HumanGSVA)
mode(HumanGSVA)
HumanGSVA<-HumanGSVA[,NorthcottFeatures, drop=FALSE]
HumanGSVA<-t(HumanGSVA)
dim(HumanGSVA)
mode(HumanGSVA)
mode(HumanGSVA)<-"numeric"
genesetHuman<-rownames(HumanGSVA)
Matrix_RANK_Human<-data.frame(genesetHuman)
for(sample in 1:ncol(HumanGSVA))
{
TempRankHuman<-sort(HumanGSVA[,sample],decreasing=TRUE)
Matrix_RANK_Human[,(colnames(HumanGSVA)[sample])]<-match(Matrix_RANK_Human$geneset,names(TempRankHuman))
}
rownames(Matrix_RANK_Human)<-Matrix_RANK_Human$geneset
Human_GSVA_Matrix<-Matrix_RANK_Human[,-1]
TAKE2<-HumanGSVA
TAKE2mat<-Human_GSVA_Matrix
all(TAKE1==TAKE2)
View(TAKE1 == TAKE2)
View(TAKE1)
View(TAKE2)
Human_GSVA_Matrix80<-Human_GSVA_Matrix
Mouse_GSVA_Matrix80<-Mouse_GSVA_Matrix
###################################
## PART B - Generate Subtype Predictions
###################################
geneset<-rownames(Human_GSVA_Matrix80) #List of all the genesets that were used in ssGSEA
# Transpose the matrix, so that Samples are in rows and genesets in columns
Northcott<-t(Human_GSVA_Matrix80) ##CHANGE DEPENDING ON WHETHER YOU WANT THE FULL MATRIX OR THE SUBSET!!
Mouse<-t(Mouse_GSVA_Matrix80)
# Add the group prediction to the Northcott data (WNT, SHH, Group3, Group4)
# Groups: WNT, SHH, Group3, Group4, NA
Northcott<-as.data.frame(Northcott)
Northcott[,"Group"]<- MB_SampleInfo$subtype[match((rownames(Northcott)),MB_SampleInfo$Sample_ID)]
# Add a column to the dataset, containing the Group labels per sample (Only Normal vs Tumour in this case)
Mouse<-as.data.frame(Mouse)
Mouse[,"Group"]<- "MouseSamples"
Mouse$Group<-as.factor(Mouse$Group)
TrainSet<-Northcott
TestSet<-Mouse
TrainSet<-TrainSet[,-ncol(TrainSet)]
## Generate the predictions
set.seed(12345)
library(kknn)
TestKKNN<-kknn(formula = Northcott$Group ~ ., TrainSet, TestSet, na.action = na.omit(),k = 5, distance = 1, kernel = "rectangular", scale=TRUE)
# ConfusionMatrixTest<-table(Mouse$Group,TestKKNN$fitted.values)
MM2S_Prediction<-as.character(TestKKNN$fitted.values)
RESULTS<-(cbind(rownames(Mouse),MM2S_Prediction,TestKKNN$prob*100,TestKKNN$CL))
listOfCols<-c("SampleName","MM2S_Prediction","Gr3_Confidence","Gr4_Confidence","Normal_Confidence","SHH_Confidence","WNT_Confidence","Neighbor1","Neighbor2","Neighbor3","Neighbor4","Neighbor5")
## PRODUCE OUTPUT WITH THE MM2S PREDICTIONS PER SAMPLE
colnames(RESULTS) <- listOfCols
message("\n")
message("OUTPUT OF MM2S:","\n")
print.table(RESULTS)
if(csv_output==TRUE)
{
write.csv(RESULTS,file="MM2S_Predictions.csv",sep="\t",col.names=listOfCols,row.names=FALSE)
}
FINAL<-TestKKNN$prob*100
colnames(FINAL)<-c("Group3","Group4","Normal","SHH","WNT")
rownames(FINAL)<-rownames(Mouse)
FINAL
View(HumanTrainingGSVAMatrix)
View(t(HumanTrainingGSVAMatrix))
View(t(HumanTrainingGSVAMatrix[1,"ACTIVATION_OF_PROTEIN_KINASE_ACTIVITY"]))
TAKE1mat[1:5,1:5]
TAKE2mat[1:5,1:5]
View(TAKE1mat == TAKE2mat)
which(TAKE1 != TAKE2)
length(which(TAKE1 != TAKE2))
all.equal.numeric(TAKE1,TAKE2)
all.equal.numeric(TAKE2,TAKE1)
View(TAKE2-TAKE1)
HumanGSVA <- HumanTrainingGSVAMatrix
HumanGroup <- HumanGSVA$Group
HumanGSVA <- t(HumanGSVA)
mode(HumanGSVA)
mode(HumanTrainingGSVAMatrix)
dim(HumanGSVA)
View(HumanGSVA)
# Now the Rank matrix will be reduced based on the commonSet
commonSet<-intersect(genesetHuman,genesetMouse)
message("There are ",length(commonSet)," common genesets between Human MB and the Test Data.")
HumanGSVA<-HumanGSVA[commonSet,, drop=FALSE]
MouseGSVA<-MouseGSVA[commonSet,, drop=FALSE]
dim(HumanGSVA)
mode(HumanGSVA)
View(HumanGSVA)
HumanGSVA <- HumanTrainingGSVAMatrix
HumanGroup <- HumanGSVA$Group
HumanGSVA <- t(HumanGSVA)
dim(HumanGSVA
)
HumanGSVA<-HumanGSVA[commonSet,, drop=FALSE]
mode(HumanGSVA)
HumanGSVA<-t(HumanGSVA)
mode(HumanGSVA)
HumanGSVA<-as.data.frame(HumanGSVA)
mode(HumanGSVA)
View(HumanGSVA)
HumanGSVA<-round(HumanGSVA,digits=3)
list.files()
load("/Users/DeenaGendoo/Desktop/ssGSEA_AND_GSVA/MM2S/data/WNT_Mouse_Expr.rda")
load("/Users/DeenaGendoo/Desktop/ssGSEA_AND_GSVA/MM2S/data/MM2Ssetup.rda")
mouseData<-WNT_Mouse_Expr
HumanGSVA <- HumanTrainingGSVAMatrix
HumanGroup <- HumanGSVA$Group
HumanGSVA <- t(HumanGSVA)
save.image("MASTER2.RData")
getwd()
load("/Users/DeenaGendoo/Desktop/TEST/MASTER2.RData")
mdm <- NULL
if (is.na(as.numeric(mouseData[1,1])))
{
mdm <- mouseData[-1,-1, drop=FALSE]
colnames(mdm) <- mouseData[1,][-1]
rownames(mdm) <- mouseData[,1][-1]
mouseData <- mdm
}
if (is.na(as.numeric(mouseData[1,ncol(mouseData)])))
{
mdm <- mouseData[-1,-1, drop=FALSE]
colnames(mdm) <- mouseData[1,][-ncol(mouseData)]
rownames(mdm) <- mouseData[,1][-1]
mouseData <- mdm
}
# Check as.numeric
ExpressionMatrixMouse <- as.matrix(mouseData)
ExpressionMatrixMouse <- apply(ExpressionMatrixMouse, c(1,2), as.numeric)
rownames(ExpressionMatrixMouse) <- rownames(mouseData)
# GSVA -> S4 method for signature 'matrix,list,character'
set.seed(12345)
MouseGSVA<-gsva(MouseData, MouseGMT$genesets,method="ssgsea", ssgsea.norm=FALSE, min.sz=20,max.sz=100, parallel.sz=3)
genesetMouse<-rownames(MouseGSVA)
library(GSVA)
# GSVA -> S4 method for signature 'matrix,list,character'
set.seed(12345)
MouseGSVA<-gsva(MouseData, MouseGMT$genesets,method="ssgsea", ssgsea.norm=FALSE, min.sz=20,max.sz=100, parallel.sz=3)
genesetMouse<-rownames(MouseGSVA)
## Call the data
MouseData<-ExpressionMatrixMouse
#Estimate ssGSEA scores using GSVA function
# GSVA -> S4 method for signature 'matrix,list,character'
set.seed(12345)
MouseGSVA<-gsva(MouseData, MouseGMT$genesets,method="ssgsea", ssgsea.norm=FALSE, min.sz=20,max.sz=100, parallel.sz=3)
genesetMouse<-rownames(MouseGSVA)
# Now the Rank matrix will be reduced based on the commonSet
commonSet<-intersect(genesetHuman,genesetMouse)
message("There are ",length(commonSet)," common genesets between Human MB and the Test Data.")
HumanGSVA<-HumanGSVA[commonSet,, drop=FALSE]
MouseGSVA<-MouseGSVA[commonSet,, drop=FALSE]
HumanGSVA<-t(HumanGSVA)
MouseGSVA<-t(MouseGSVA)
HumanGSVA<-as.data.frame(HumanGSVA)
## FEATURE SELECTION FOR GENESETS TO USE IN THE RANKING
#First get the subset of the data pertaining to just one group
GenesetStatNormal<-GenesetStatNormal[commonSet]
GenesetStatGroup3<-GenesetStatGroup3[commonSet]
GenesetStatGroup4<-GenesetStatGroup4[commonSet]
GenesetStatWNT<-GenesetStatWNT[commonSet]
GenesetStatSHH<-GenesetStatSHH[commonSet]
#Pick the features/genesets that best differentiate each subtype, get their names
#Pick from the FROZEN Matrix of Wilcoxon P-values for all genesets, across subtypes, for Human MB
geneset<-commonSet
FeatureSelection<-c(names(sort(GenesetStatSHH,decreasing=FALSE))[1:24],
names(sort(GenesetStatNormal,decreasing=FALSE))[1:24],
names(sort(GenesetStatGroup4,decreasing=FALSE))[1:24],
names(sort(GenesetStatGroup3,decreasing=FALSE))[1:24],
names(sort(GenesetStatWNT,decreasing=FALSE))[1:24])
#Remove the redundant genesets
NorthcottFeatures<-unique(FeatureSelection)
message("Of these, ", length(NorthcottFeatures)," feature-selected genesets are being used for classification")
HumanGSVA<-HumanGSVA[,NorthcottFeatures, drop=FALSE]
MouseGSVA<-MouseGSVA[,NorthcottFeatures, drop=FALSE]
HumanGSVA[1:5,1:5]
HumanGSVA<-t(HumanGSVA)
MouseGSVA<-t(MouseGSVA)
genesetHuman<-rownames(HumanGSVA)
genesetMouse<-rownames(MouseGSVA)
Matrix_RANK_Human<-data.frame(genesetHuman)
for(sample in 1:ncol(HumanGSVA))
{
TempRankHuman<-sort(HumanGSVA[,sample],decreasing=TRUE)
Matrix_RANK_Human[,(colnames(HumanGSVA)[sample])]<-match(Matrix_RANK_Human$geneset,names(TempRankHuman))
}
rownames(Matrix_RANK_Human)<-Matrix_RANK_Human$geneset
Human_GSVA_Matrix<-Matrix_RANK_Human[,-1]
Matrix_RANK_Mouse<-data.frame(genesetMouse)
for(sample in 1:ncol(MouseGSVA))
{
TempRankMouse<-sort(MouseGSVA[,sample],decreasing=TRUE)
Matrix_RANK_Mouse[,(colnames(MouseGSVA)[sample])]<-match(Matrix_RANK_Mouse$geneset,names(TempRankMouse))
}
rownames(Matrix_RANK_Mouse)<-Matrix_RANK_Mouse$geneset #Rename the matrix by sample names
Mouse_GSVA_Matrix<-Matrix_RANK_Mouse[,-1, drop=FALSE] #Remove the geneset column
Human_GSVA_Matrix80<-Human_GSVA_Matrix
Mouse_GSVA_Matrix80<-Mouse_GSVA_Matrix
###################################
## PART B - Generate Subtype Predictions
###################################
geneset<-rownames(Human_GSVA_Matrix80) #List of all the genesets that were used in ssGSEA
# Transpose the matrix, so that Samples are in rows and genesets in columns
Northcott<-t(Human_GSVA_Matrix80) ##CHANGE DEPENDING ON WHETHER YOU WANT THE FULL MATRIX OR THE SUBSET!!
Mouse<-t(Mouse_GSVA_Matrix80)
# Add the group prediction to the Northcott data (WNT, SHH, Group3, Group4)
# Groups: WNT, SHH, Group3, Group4, NA
Northcott<-as.data.frame(Northcott)
Northcott[,"Group"]<- MB_SampleInfo$subtype[match((rownames(Northcott)),MB_SampleInfo$Sample_ID)]
# Add a column to the dataset, containing the Group labels per sample (Only Normal vs Tumour in this case)
Mouse<-as.data.frame(Mouse)
Mouse[,"Group"]<- "MouseSamples"
Mouse$Group<-as.factor(Mouse$Group)
TrainSet<-Northcott
TestSet<-Mouse
TrainSet<-TrainSet[,-ncol(TrainSet)]
## Generate the predictions
set.seed(12345)
library(kknn)
TestKKNN<-kknn(formula = Northcott$Group ~ ., TrainSet, TestSet, na.action = na.omit(),k = 5, distance = 1, kernel = "rectangular", scale=TRUE)
# ConfusionMatrixTest<-table(Mouse$Group,TestKKNN$fitted.values)
MM2S_Prediction<-as.character(TestKKNN$fitted.values)
RESULTS<-(cbind(rownames(Mouse),MM2S_Prediction,TestKKNN$prob*100,TestKKNN$CL))
listOfCols<-c("SampleName","MM2S_Prediction","Gr3_Confidence","Gr4_Confidence","Normal_Confidence","SHH_Confidence","WNT_Confidence","Neighbor1","Neighbor2","Neighbor3","Neighbor4","Neighbor5")
## PRODUCE OUTPUT WITH THE MM2S PREDICTIONS PER SAMPLE
colnames(RESULTS) <- listOfCols
message("\n")
message("OUTPUT OF MM2S:","\n")
print.table(RESULTS)
if(csv_output==TRUE)
{
write.csv(RESULTS,file="MM2S_Predictions.csv",sep="\t",col.names=listOfCols,row.names=FALSE)
}
FINAL<-TestKKNN$prob*100
colnames(FINAL)<-c("Group3","Group4","Normal","SHH","WNT")
rownames(FINAL)<-rownames(Mouse)
FINAL
Human_GSVA_Matrix80[1:5,1:5]
HumanGSVA[1:5,1:5]
mode(HumanGSVA)
ORIG<-HumanGSVA
load("/Users/DeenaGendoo/Desktop/TEST/TEST.RData")
all(ORIG==HumanGSVA)
colnames(HumanGSVA)
View(HumanGSVA)
View(Orig)
View(ORIG)
dim(HumanGSVA)
dim(ORIG)
Matrix_RANK_Human<-data.frame(genesetHuman)
ncol(HumanGSVA)
TempRankHuman<-sort(HumanGSVA[,sample],decreasing=TRUE)
sample=1
TempRankHuman<-sort(HumanGSVA[,sample],decreasing=TRUE)
View(TempRankHuman)
(colnames(HumanGSVA)[sample])
Matrix_RANK_Human$geneset
names(TempRankHuman)
match(Matrix_RANK_Human$geneset,names(TempRankHuman))
?match
NorthcottFeatures
load("/Users/DeenaGendoo/Desktop/ssGSEA_AND_GSVA/MM2S/data/MM2Ssetup.rda")
HumanGSVA <- HumanTrainingGSVAMatrix
HumanGroup <- HumanGSVA$Group
HumanGSVA <- t(HumanGSVA)
commonSet<-genesetHuman[1:674]
message("There are ",length(commonSet)," common genesets between Human MB and the Test Data.")
dim(HumanGSVA)
HumanGSVA<-HumanGSVA[commonSet,, drop=FALSE]
HumanGSVA<-t(HumanGSVA)
HumanGSVA<-as.data.frame(HumanGSVA)
geneset<-commonSet
NorthcottFeatures<-geneset
HumanGSVA<-HumanGSVA[,NorthcottFeatures, drop=FALSE]
dim(HumanGSVA)
HumanGSVA<-t(HumanGSVA)
genesetHuman<-rownames(HumanGSVA)
genesetHuman
Matrix_RANK_Human<-data.frame(genesetHuman)
for(sample in 1:ncol(HumanGSVA))
{
TempRankHuman<-sort(HumanGSVA[,sample],decreasing=TRUE)
Matrix_RANK_Human[,(colnames(HumanGSVA)[sample])]<-match(Matrix_RANK_Human$geneset,names(TempRankHuman))
}
rownames(Matrix_RANK_Human)<-Matrix_RANK_Human$geneset
Human_GSVA_Matrix<-Matrix_RANK_Human[,-1]
View(Human_GSVA_Matrix)
class(HumanGSVA)
class(Human_GSVA_Matrix)
View(HumanGSVA)
dim(HumanGSVA)
dim(Human_GSVA_Matrix)
View(Human_GSVA_Matrix)
save(HumanGSVA,Human_GSVA_Matrix,file="FROZEN_ES_and_RANKS.RData")
load("/Users/DeenaGendoo/Desktop/ssGSEA_AND_GSVA/MM2S/R/FROZEN_ES_and_RANKS.RData")
FrozenESMatrix<-Human_GSVA_Matrix
View(FrozenESMatrix)
Frozen_ES_Rank_Matrix<-Human_GSVA_Matrix
rm(FrozenESMatrix)
dim(HumanGSVA)
Frozen_ES_Matrix<-HumanGSVA
rm(HumanGSVA)
dim(Frozen_ES_Matrix)
class(Frozen_ES_Rank_Matrix)
dim(Frozen_ES_Rank_Matrix)
rm(Human_GSVA_Matrix)
save(Frozen_ES_Matrix,Frozen_ES_Rank_Matrix,file="FROZEN_ES_and_RANKS.RData")
q()
load("/Users/DeenaGendoo/Desktop/ssGSEA_AND_GSVA/MM2S/data/MM2Ssetup.rda")
load("/Users/DeenaGendoo/Desktop/ssGSEA_AND_GSVA/MM2S/data/Human_Cho_Expr.rda")
set.seed(12345)
TestData<-Human_Cho_Expr
mdm <- NULL
if (is.na(as.numeric(TestData[1,1])))
{
mdm <- TestData[-1,-1,drop=FALSE]
colnames(mdm) <- TestData[1,][-1]
rownames(mdm) <- TestData[,1][-1]
TestData <- mdm
}
if (is.na(as.numeric(TestData[1,ncol(TestData)])))
{
mdm <- TestData[-1,-1,drop=FALSE]
colnames(mdm) <- TestData[1,][-ncol(TestData)]
rownames(mdm) <- TestData[,1][-1]
TestData <- mdm
}
# Check as.numeric
ExpressionMatrixHumanTest <- as.matrix(TestData)
ExpressionMatrixHumanTest <- apply(ExpressionMatrixHumanTest, c(1,2), as.numeric)
rownames(ExpressionMatrixHumanTest) <- rownames(TestData)
## Call the data
HumanTestData<-ExpressionMatrixHumanTest
#Estimate ssGSEA scores using GSVA function
# GSVA -> S4 method for signature 'matrix,list,character'
HumanTestGSVA<-gsva(HumanTestData, HumanGMT$genesets,method="ssgsea", ssgsea.norm=FALSE, min.sz=20,max.sz=100, parallel.sz=3)
OrigGSVAMatrix<-HumanTestGSVA
genesetHumanTest<-rownames(HumanTestGSVA)
#Find common geneset
library(GSVA)
## Call the data
HumanTestData<-ExpressionMatrixHumanTest
#Estimate ssGSEA scores using GSVA function
# GSVA -> S4 method for signature 'matrix,list,character'
HumanTestGSVA<-gsva(HumanTestData, HumanGMT$genesets,method="ssgsea", ssgsea.norm=FALSE, min.sz=20,max.sz=100, parallel.sz=3)
OrigGSVAMatrix<-HumanTestGSVA
genesetHumanTest<-rownames(HumanTestGSVA)
#Find common geneset
# Now the Rank matrix will be reduced based on the commonSet
commonSet<-intersect(genesetHuman,genesetHumanTest)
message("There are ",length(commonSet)," common genesets between Human MB and the Test Data.")
HumanTestGSVA<-HumanTestGSVA[commonSet,, drop=FALSE]
HumanTestGSVA<-t(HumanTestGSVA)
#First get the subset of the data pertaining to just one group
GenesetStatNormal<-GenesetStatNormal[commonSet]
GenesetStatGroup3<-GenesetStatGroup3[commonSet]
GenesetStatGroup4<-GenesetStatGroup4[commonSet]
GenesetStatWNT<-GenesetStatWNT[commonSet]
GenesetStatSHH<-GenesetStatSHH[commonSet]
#Pick the features/genesets that best differentiate each subtype, get their names
#Pick from the FROZEN Matrix of Wilcoxon P-values for all genesets, across subtypes, for Human MB
geneset<-commonSet
FeatureSelection<-c(names(sort(GenesetStatSHH,decreasing=FALSE))[1:24],
names(sort(GenesetStatNormal,decreasing=FALSE))[1:24],
names(sort(GenesetStatGroup4,decreasing=FALSE))[1:24],
names(sort(GenesetStatGroup3,decreasing=FALSE))[1:24],
names(sort(GenesetStatWNT,decreasing=FALSE))[1:24])
#Remove the redundant genesets
NorthcottFeatures<-unique(FeatureSelection)
message("Of these, ", length(NorthcottFeatures)," feature-selected genesets are being used for classification")
HumanTestGSVA<-HumanTestGSVA[,NorthcottFeatures, drop=FALSE]
HumanTestGSVA<-t(HumanTestGSVA)
genesetHumanTest<-rownames(HumanTestGSVA)
genesetHumanTest
Matrix_RANK_Human<-data.frame(NorthcottFeatures)
for(sample in 1:ncol(Frozen_ES_Rank_Matrix))
{
TempRankHuman<-Frozen_ES_Rank_Matrix[,sample]
TempRankHuman<-TempRankHuman[which(TempRankHuman %in% NorthcottFeatures)]
Matrix_RANK_Human[,(colnames(Frozen_ES_Rank_Matrix)[sample])]<-match(factor(NorthcottFeatures),factor(TempRankHuman))
}
rownames(Matrix_RANK_Human)<-NorthcottFeatures
Human_GSVA_Matrix<-Matrix_RANK_Human[,-1]
Matrix_RANK_HumanTest<-data.frame(genesetHumanTest)
for(sample in 1:ncol(HumanTestGSVA))
{
TempRankHumanTest<-sort(HumanTestGSVA[,sample],decreasing=TRUE)
Matrix_RANK_HumanTest[,(colnames(HumanTestGSVA)[sample])]<-match(Matrix_RANK_HumanTest$geneset,names(TempRankHumanTest))
}
rownames(Matrix_RANK_HumanTest)<-Matrix_RANK_HumanTest$geneset #Rename the matrix by sample names
HumanTest_GSVA_Matrix<-Matrix_RANK_HumanTest[,-1, drop=FALSE] #Remove the geneset column
Human_GSVA_Matrix80<-Human_GSVA_Matrix
HumanTest_GSVA_Matrix80<-HumanTest_GSVA_Matrix
geneset<-rownames(Human_GSVA_Matrix80) #List of all the genesets that were used in ssGSEA
# Transpose the matrix, so that Samples are in rows and genesets in columns
Northcott<-t(Human_GSVA_Matrix80) ##CHANGE DEPENDING ON WHETHER YOU WANT THE FULL MATRIX OR THE SUBSET!!
HumanTest<-t(HumanTest_GSVA_Matrix80)
# Add the group prediction to the Northcott data (WNT, SHH, Group3, Group4)
# Groups: WNT, SHH, Group3, Group4, NA
Northcott<-as.data.frame(Northcott)
Northcott[,"Group"]<- MB_SampleInfo$subtype[match((rownames(Northcott)),MB_SampleInfo$Sample_ID)]
# Add a column to the dataset, containing the Group labels per sample (Only Normal vs Tumour in this case)
HumanTest<-as.data.frame(HumanTest)
HumanTest[,"Group"]<- "HumanTestSamples"
HumanTest$Group<-as.factor(HumanTest$Group)
TrainSet<-Northcott
TestSet<-HumanTest
TrainSet<-TrainSet[,-ncol(TrainSet)]
## Generate the predictions
set.seed(12345)
library(kknn)
TestKKNN<-kknn(formula = Northcott$Group ~ ., TrainSet, TestSet, na.action = na.omit(),k = 5, distance = 1, kernel = "rectangular", scale=TRUE)
# ConfusionMatrixTest<-table(HumanTest$Group,TestKKNN$fitted.values)
MM2S_Prediction<-as.character(TestKKNN$fitted.values)
RESULTS<-(cbind(rownames(HumanTest),MM2S_Prediction,TestKKNN$prob*100,TestKKNN$CL))
listOfCols<-c("SampleName","MM2S_Prediction","Gr3_Confidence","Gr4_Confidence","Normal_Confidence","SHH_Confidence","WNT_Confidence","Neighbor1","Neighbor2","Neighbor3","Neighbor4","Neighbor5")
## PRODUCE OUTPUT WITH THE MM2S PREDICTIONS PER SAMPLE
colnames(RESULTS) <- listOfCols
message("\n")
message("OUTPUT OF MM2S:","\n")
print.table(RESULTS)
if(csv_output==TRUE)
{
write.csv(RESULTS,file="MM2S_Predictions.csv",sep="\t",col.names=listOfCols,row.names=FALSE)
}
FINAL<-TestKKNN$prob*100
colnames(FINAL)<-c("Group3","Group4","Normal","SHH","WNT")
rownames(FINAL)<-rownames(HumanTest)
FINAL
load("/Users/DeenaGendoo/Desktop/ssGSEA_AND_GSVA/MM2S/data/MM2Ssetup.rda")
as.factor(HumanTrainingGSVAMatrix$Group)
col.list<-c("goldenrod1","#abdda4","#bababa","#d7191c","#2b83ba")[as.factor(HumanTrainingGSVAMatrix$Group)]
col.list
load("/Users/DeenaGendoo/Desktop/ssGSEA_AND_GSVA/MM2S/data/GTML_Mouse_Preds.rda")
as.factor(HumanTrainingGSVAMatrix$Group)
load("/Users/DeenaGendoo/Desktop/ssGSEA_AND_GSVA/MM2S/data/MM2Ssetup.rda")
as.factor(HumanTrainingGSVAMatrix$Group)
HumanTraining_ColorList<-as.factor(HumanTrainingGSVAMatrix$Group)
HumanTraining_ColorList
rm(HumanTrainingGSVAMatrix)
GroupColors<-HumanTraining_ColorList
rm(HumanTraining_ColorList)
GroupColors
View(MB_SampleInfo)
MB_SampleInfo$subtype
MB_SampleInfo$subtype == GroupColors
all(MB_SampleInfo$subtype == GroupColors)
cbind(MB_SampleInfo$subtype,GroupColors)
View(cbind(MB_SampleInfo$subtype,GroupColors))
View(cbind(MB_SampleInfo$subtype,GroupColors))
View(cbind(factor(MB_SampleInfo$subtype),factor(GroupColors))
)
col.list2<-c("goldenrod1","#abdda4","#bababa","#d7191c","#2b83ba")[as.factor(MB_SampleInfo$subtype)]
rm(GroupColors)
clear
ls
rm(col.list2)
getwd()
setwd("/Users/DeenaGendoo/Desktop/ssGSEA_AND_GSVA/MM2S/data/")
save.image("MM2Ssetup.rda")
